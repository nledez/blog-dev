--- 
wordpress_id: 303
title: Mobile Developments Notes
wordpress_url: http://litanyagainstfear.com/?p=303
layout: post
category: prorubyconf
---
Part of my series of notes from the <a href="http://www.voicesthatmatter.com/ruby2008/">Professional Ruby Conference</a>. <a href="http://litanyagainstfear.com/blog/2008/11/18/professional-ruby-conference-notes/">See them all here.</a>

This talk is from Matt Pelletier from Eastmedia.

Going to talk about the mobile world. ~280 million PC sales worldwide. Around 1.2 billion mobile handsets too. The technologies that are in play:

* Voice
* SMS
* MMS
* Mobile Data Services

Voice: How all of the telcoms started, obviously. Normal calls. Robots too. Tons of VoIP technologies too: Voice XML, Asterisk/Adhersion

SMS: Just recently started to surpass the number of voice calls in the States. SMS has long been used in South Korea/Japan. More SMS than email there! Mobile Terminated: you send a text message, Mobile Originated: you recieve a text message. SMS works even during emergencies and when phones are normally down since it wasn't originally a consumer service. There's no metadata associated with an SMS though...just time and 160 characters. Can't reply even.

MMS: "A total shit show". Even Apple ditched it and used email. It's very carrier specific and abritrary. Hard problem to solve though.

Mobile Data Services: Most sharply rising area that's important to businesses. WAP 1.0 was a disaster. WAP 2.0 is a trimmed down Web. Trimmed down version of XHTML. Matt used this for their New York Jets project, which got 2 million hits within 4 hours when Brett Favre got signed. Crazy. The "REAL" internet. is involved here too, sans Flash. Browser War v2.0: MobileSafari, Opera, Android Browser, Skyfire. Tons of apps now too. These used to be controlled by carriers in the US, but it's changing. This is being slowly eroded by the App Store and Android's Marketplace. App development process is MUCH better than it used to be, but it really isn't the Web. MANY MANY operating systems on each phone. The best approach to creating these seems to be hybrid: SaaS, iPhone app consuming a Rails app.

Smartphones are becoming more and more common. What exactly do people want? Twitter/Facebook: talk to each other, find places, search. Americans use the mobile web as an extension of the desktop. Location Based Services aren't quite there yet. GPS is still slow. Not able to figure out exactly where you are yet.

Spot.io: Post online strange stuff you see that's location based. Entry points: Twitter, IM, Email, API with OAuth, iPhone client. They're also parsing english to extract the most knowledge. Using a hand written parser since people don't write the same on Twitter as they do on the Wall Strett Journal.

iPhone Development: Feels like Rails community 3-4 years ago. Sparse domain knowledge and poorly organized. Apple's SDK has code examples but has a lot of holes and problems. Not many good code conventions, but not that bad given it's been out for a year. Apple and Google have squeezed down the multiple layers of complexity to a point where you just have to worry about the APIs.
