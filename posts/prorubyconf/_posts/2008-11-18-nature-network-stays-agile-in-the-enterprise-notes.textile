--- 
wordpress_id: 274
title: Nature Network Stays Agile in the Enterprise Notes
wordpress_url: http://litanyagainstfear.com/?p=274
layout: post
category: prorubyconf
---
Part of my series of notes from the <a href="http://www.voicesthatmatter.com/ruby2008/">Professional Ruby Conference</a>. <a href="../blog/2008/11/18/professional-ruby-conference-notes/">See them all here.</a><a href="../blog/2008/11/18/blog/2008/11/18/blog/2008/11/18/professional-ruby-conference-notes/"></a>

This talk is from Matt Jankowski from Thoughtbot.

Showing some hilarious images when you google 'enterprise', 'agile', and 'agile management'. All ridiculously complicated. Agile is Thoughtbot. The enterprise is a old, huge publishing group in London. The site itself is social networking for scientists. Provides a forum for online communication and allows them to share research data, etc. Had over 28 people in total working on the project for at least a month.

What is Agile? Obie explained a lot...but they do "lowercase agile". Not 100% to all conventions. TDD + BDD / TATFT ^ XP. No pair programming. Elements taken from 'Getting Real' by 37signals too. Lightweight, goal-driven development.

What is enterprise? Meetings. Spec documents. Layers of management. Constant re-organization. Bureaucracy. Internal politics. People who "just" want a job. Frowning on people like that just isn't cool.

Goals between agile companies and enterprise companies are very different. REAL goals are different. Are the cultures at odds with each other? Can they work together efficiently?

Getting to the case study! They had some crazy routes that the client wanted, and didn't have leverage to say no. Having someone with no check on their power that makes crazy decisions is bad, mmkay? They used JIRA for issue tracker. Ridiculously complicated and not a communication tool like Basecamp is. They also used Perforce, centralized SCM, which emphasized control, not trust.

Plenty of stakeholders in the project that had conflicting and related requirements. Ad sales, editors, IT Group (Keep this crazy ruby stuff away from our Java app servers!), Developers (keep crazy ruby code away from us!), product/branding team, system architects with tons of experience, QA team, analytics, design team.

Developers were obsessed with test coverage, not product quality. Obsessed with semantic/valid markup, not site usability. Elegance &amp; refactoring over how the site feels/looks. Developers aren't just coders! Devs must have constant access to product team, but the product team can't interrupt devs.

Production site was still very high-quality. Hire excellent people. Enterprise is about avoiding risk and managing change.
